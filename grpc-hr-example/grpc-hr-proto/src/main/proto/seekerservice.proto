syntax = "proto3";

option java_multiple_files = true;
option java_package = "com.heartfulness.platform.grpc.seeker.service";
option java_outer_classname = "SeekerServiceProto";
option objc_class_prefix = "Seeker";

package com.heartfulness.platform.grpc.seeker.service;
import "common.proto";

import "google/protobuf/empty.proto";
import "google/protobuf/any.proto";
import "google/protobuf/type.proto";
import "google/protobuf/struct.proto";
import "google/protobuf/wrappers.proto";

enum UserRole {
  ABHYASI = 0;
  FUNCTIONARY_ROLE = 1;
  FUNCTIONARY_DISPUTE_ROLE = 2;
  MASTER_ROLE=3;
}

// Interface exported by the server.
service SeekerService {
  rpc createSeeker (Seeker) returns (Seeker) {};
  rpc updateSeeker (Seeker) returns (Seeker) {};
  rpc findSeekerByFilter(SeekerFilter) returns (SeekerList) {};
  rpc deleteSeeker(google.protobuf.Int64Value) returns (google.protobuf.Empty) {};
  rpc findSeekerById (google.protobuf.Int64Value) returns (Seeker) {};
  rpc findAllSeekers(google.protobuf.Empty) returns (stream Seeker) {};
  rpc updateSeekersInBatch(stream Seeker) returns (stream Seeker){};
  rpc submitApplication (Answers) returns (google.protobuf.StringValue);
  rpc submitFunctionaryAnswers (Answers) returns (google.protobuf.BoolValue);
  rpc getApplicationsWaitingForMyReview(Empty) returns (ApplicationsList);
  rpc getApplicationsProcessed(Empty) returns (ApplicationsList);
  rpc getApplication (google.protobuf.StringValue) returns (Application);
  rpc reviewApplication (Answers) returns (google.protobuf.StringValue);
}

//Seeker filter object
message SeekerFilter {
  int64 id = 1;
  string seekerName = 2;
  string location = 3;
  
}

//Seeker result list
message SeekerList {
    repeated Seeker resultList=1;
    google.protobuf.Int64Value resultCount=2;
}

//Seeker object
message Seeker {
  int64 id = 1;
  string seekerName = 2;
  string location = 3;
  string firstName = 4;
  string lastName = 5;
  string fullName = 6;
  string fatherName = 7;
  string motherName = 8;
  string dateOfBirth = 9;
  string phoneNo = 10;
  string email = 11;
  string gender = 12;
  string highestEducationQualification = 13;
  string addressLine1 = 14;
  string addressLine2 = 15;
  string city = 16;
  string district = 17;
  string state = 18;
  string pincode = 19;
  string heartfulnessCenter = 20;
  string dateOfFirstSitting = 21;
  string nameOfPreceptor = 22;
  string whomDoYouLiveWith = 23;
  repeated Application applications = 24;
}
message Profile {
  string applicationId = 1;
  string AbyasiId=2;
  UserRole role = 3;
  ApplicationStatus applicationStatus = 4;
}
enum ApplicationStatus {
  NOT_YET_APPLIED_FOR_LEVEL_1 = 0;
  ABYASI_SUBMITTED = 1;
  WAITING_FUNCTIONARY_ASSIGNED = 2;
  WAITING_FUNCTIONARY_SUBMITTED = 3;
  PASSED_SCREENING=4;
  FAILED_IN_SCREENING=5;
  ONHOLD_FUNCTION_DISPUTE_WAITING=6;
  FUNCTION_DISPUTE_SUBMITTED = 7;
  WAITING_FOR_FUNCTIONARY_DISPUTE_REVIEW = 8;
  NOT_APPLICABLE = 9;// For functionary this status will always be not_applicable
  APPROVED=10;
  REJECTED=11;
}

//Application object
message Application {
  string applicationId = 1;
  string AbyasiId=2;
  ApplicationStatus status = 3;
  Answers abyasiAnswers = 4;
  Answers functionaryAnswers = 5;
}

message Answers{
  string language = 1;
  repeated QuestionsAndAnswers questionsAndAnswers = 2;
  string finalComments=3;
}

message QuestionsAndAnswers {
  string categoryId=1;
  string questionId = 2;
  string answerOptionId = 3;
  string additionalComment=4;
}

message ApplicationSummary {
  string applicationId = 1;
  ApplicationStatus status = 2;
  string applicantEmail = 3;
  string applicantName = 4;
  string applicantPhone = 5;
}

message ApplicationsList {
  repeated ApplicationSummary applications = 1;
}


message Empty{

}
